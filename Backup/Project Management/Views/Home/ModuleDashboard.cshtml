@model IEnumerable<Project_Management.Models.moduleDashboard>

@{
    ViewBag.Title = "ModuleDashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript">
    function openFileInput(e) {
        $("#" + $(e).attr("data-inputelem")).trigger("click");
    }

    $(document).ready(function () {
        $("#TechResource").select2({
            placeholder: "Select Tech Resource",
            allowClear: true
        });
        $("#DomainResource").select2({
            placeholder: "Select Analyst Resource",
            allowClear: true
        });

        $("#editTechResource").select2({
            placeholder: "Select Tech Resource",
            allowClear: true
        });
        $("#editDomainResource").select2({
            placeholder: "Select Analyst Resource",
            allowClear: true
        });

        $("html").niceScroll({ touchbehavior: false, cursorcolor: "#006F6F", cursoropacitymax: 0.6, cursorwidth: 8, scrollspeed: 100, horizrailenabled: false, bouncescroll: true });

        $(".modal-body").find('input, textarea').on('keyup blur focus change', function (e) {
            if (e.type === 'keyup') {
                if ($(this).hasClass("vlActive"))
                    $(this).removeClass("vlActive");
            }
            if (e.type === 'change') {
                if ($(this).hasClass("vlActive"))
                    $(this).removeClass("vlActive");
            }
        });


        $("#am_qtip").qtip({
            content: {
                text: 'Click To Append Module List'
            },
            position: {
                my: 'bottom left',  // Position my top left...
                at: 'top right', // at the bottom right of...
                target: 'mouse',
                adjust: {
                    mouse: true  // Can be omitted (e.g. default behaviour)
                }

            },
            show: {
                delay: 10
            }
        });

        $(".glyphicon-remove-sign").qtip({
            content: {
                text: 'Delete This Module'
            },
            position: {
                my: 'bottom left',  // Position my top left...
                at: 'top right', // at the bottom right of...
                target: 'mouse',
                adjust: {
                    mouse: true  // Can be omitted (e.g. default behaviour)
                }
                
            },
            show: {
                delay: 10
            }
        });
        
        $(".files-exist").qtip({
            content: {
                text: 'Click To View Files'
            },
            position: {
                my: 'bottom left',  // Position my top left...
                at: 'top right', // at the bottom right of...
                target: 'mouse',
                adjust: {
                    mouse: true  // Can be omitted (e.g. default behaviour)
                }

            },
            show: {
                delay: 10
            }
        });

        $(".files-empty").qtip({
            content: {
                text: 'Click To Add Files'
            },
            position: {
                my: 'bottom left',  // Position my top left...
                at: 'top right', // at the bottom right of...
                target: 'mouse',
                adjust: {
                    mouse: true  // Can be omitted (e.g. default behaviour)
                }

            },
            show: {
                delay: 10
            }
        });

        $(".edit-pen").qtip({
            content: {
                text: 'Click To Edit Module'
            },
            position: {
                my: 'bottom left',  // Position my top left...
                at: 'top right', // at the bottom right of...
                target: 'mouse',
                adjust: {
                    mouse: true  // Can be omitted (e.g. default behaviour)
                }

            },
            show: {
                delay: 10
            }
        });

        $("#addModuleBtn").qtip({
            content: {
                text: 'Click To Add More Modules'
            },
            position: {
                my: 'bottom left',  // Position my top left...
                at: 'top right', // at the bottom right of...
                target: 'mouse',
                adjust: {
                    mouse: true  // Can be omitted (e.g. default behaviour)
                }
            },
            show: {
                delay: 10
            }
            
        }); 
        
        $(".dragger-info").qtip({
            content: {
                text: 'Click & Hold To Reorder Resources'
            },
            position: {
                my: 'bottom left',  // Position my top left...
                at: 'top right', // at the bottom right of...
                target: 'mouse',
                adjust: {
                    mouse: true  // Can be omitted (e.g. default behaviour)
                }
            },
            show: {
                delay: 10
            }

        });

        GetTechResourceList();
    });
    function deleteModuleDB(e) {
        swal({
            title: "Are you sure?",
            text: "You will not be able to recover this module",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "rgba(0, 111, 111, 0.86)",
            confirmButtonText: "Yes, delete it",
            cancelButtonText: "No, cancel",
            closeOnConfirm: false,
            closeOnCancel: false
        }, function (isConfirm) {
            if (isConfirm) {
                var mID = $(e).attr("data-mID");
                $.ajax({
                    type: "POST",
                    url: "/Home/DeleteModule", //give here action name
                    async: false,
                    data: "{id:'" + mID + "'}",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json"
                })
                .success(function (data) {

                    $.each(data, function (index, comment) {
                        if (comment.ModuleTitle == "success")
                            $(e).parent().parent().fadeOut();
                        swal("Deleted!", "Your module has been deleted.", "success");
                    });
                });

            }
            else {
                swal("Cancelled", "Your module is safe", "error");
            }
        });

    }
</script>

<div class="row" style="border-bottom:solid 1px floralwhite">
    <h2 class="col-sm-6">Module Dashboard <i class="fa fa-cube" style="color:#016363"></i></h2>
    <h5 class="text-uppercase col-sm-6" style="line-height: 15px;padding-top: 28px;text-align: right;color: #712727;font-weight: 600;"><span class="glyphicon glyphicon-info-sign"></span> showing only user specific modules</h5>
</div>


<div id="moduleContainer">
    @if (Model != null)
    {
        foreach (var item in Model)
        {  
        <div class="MyCon col-lg-3" data-ModuleID="@item.ModuleID" style="display:none; padding:10px; float:left;">
            <div class="InnerMyCon" style="height: 245px; background-color: rgba(0, 84, 77, 0.93); background-image: url(&quot;http://www.transparenttextures.com/patterns/debut-light.png&quot;); width: 260px; box-shadow: 2px 2px 10px; border-bottom-left-radius: 40px; border-top-right-radius: 40px; border-top-left-radius: 5px; border-bottom-right-radius: 5px; padding-left: 10px; padding-right: 10px;">
                @*......File Input......*@
                @{
            if (item.ModuleFiles != null)
            {

@*.....Files.......*@              
                    <div class="Tag-@item.ModuleID" style="width: 0px; position: relative; top: 18px; left: 10px; display:inline-block;"><span data-toggle='modal' data-target='#docsModal' data-ModuleID="@item.ModuleID" onclick="showDocs(this)" class="glyphicon glyphicon-tags files-exist" style="cursor: pointer; zoom: 112%; color:#F8D486;"></span></div>
            }
            else
            {
@*.....Input.......*@ 
                    <div class="Tag-@item.ModuleID" style="width: 0px; position: relative; top: 18px; left: 10px;  display:inline-block;">
                        <span data-inputelem="fileupload_@item.ModuleID" class="glyphicon glyphicon-tags files-empty" style="zoom: 112%; color: #ddd; cursor:pointer;" onclick="openFileInput(this)"></span> 
                        <input id="fileupload_@item.ModuleID" data-ModuleID="@item.ModuleID" style="display:none;" onchange="UploadModuleFiles(this)" type="file" name="files[]" multiple />

                    </div>
            }
                    
                }
                
                <div style="width: 0px; position: relative; top: 18px; left: 40px;  display:inline-block;"><span data-mTitle="@item.ModuleTitle" data-strtDate="@item.StartDate" data-totalDays="@item.TotalDays" data-techResrc="@item.TechResource" data-analystResrc="@item.AnalystResource" data-techDuration="@item.TechDuration" data-analystDuration="@item.AnalystDuration" data-developerDays="@item.DeveloperDuration" data-baDays="@item.BADuration" data-qcDays="@item.QCDuration" data-leadDays="@item.LeadDuration" data-domainDays="@item.DomainDuration" data-mDesc="@item.ModuleDescription" data-mCost="@item.ModuleCost" data-toggle='modal' data-target='#moduleEditModal' class="fa fa-pencil-square-o edit-pen" style="cursor: pointer; zoom: 135%; color:#F8D486;" onclick="fillEditPopupModule(this)"></span></div>
                
                <div style="width: 0px; position: relative; top: 18px; left: 70px;  display:inline-block;"><span data-mTitle="@item.ModuleTitle" data-strtDate="@item.StartDate" data-totalDays="@item.TotalDays" data-techDuration="@item.TechDuration" data-analystDuration="@item.AnalystDuration" data-developerDays="@item.DeveloperDuration" data-baDays="@item.BADuration" data-qcDays="@item.QCDuration" data-leadDays="@item.LeadDuration" data-domainDays="@item.DomainDuration" data-toggle='modal' data-target='#resourceOrderModal' class="fa fa-list-ul" style="cursor: pointer; zoom: 135%; color:#F8D486;" onclick="drawResourceGanttChart(this)"></span></div>

                <span data-mID="@item.ModuleID" class="glyphicon glyphicon-remove-sign" onclick="deleteModuleDB(this)" style="zoom:112%; margin-left:88%; margin-top:0%; color:#ddd; cursor:pointer; display:inherit;"></span>
                <div class="container" style="color: #ddd; position: relative; top: 10px;">

                    <div><strong>Module Title: @item.ModuleTitle</strong></div>
                    <hr />
                    <div><strong>Module Weight: @item.ModuleWeight</strong></div>
                    <hr />
                    <div id="endDt_@item.ModuleID" data-endDt="@item.StartDate" data-totalDays="@item.TotalDays"></div>
                    <hr />
                    <div data-toggle='modal' data-target='#GanttChartModal'>
                        <strong>Status :</strong><div id="pBarVal_@item.ModuleID" style="font-weight:bold; float:right;"></div>
                    </div>

                    <div class="bars" style="width: 100%; height: 10px; background-color: gainsboro; box-shadow: 1px 1px 7px black; position: relative; top: 8px">
                        <div id="pBar_@item.ModuleID" data-content="@item.PercentComplete" style="height: 100%; width:0%; background: #00544d;" ></div>
                    </div>
                    <hr />

                </div>
            </div>
        </div> 
        }
    }
    
    
    
    
    

@*........Div For Test.......*@
        

      
@*........./Div For Test.......*@


    <div class="MyCon col-lg-3" style="display: none; padding: 10px; float: left;">
        <div id="AddModule_btn" style="height: 245px; background: lightgray; width: 260px; box-shadow: 2px 2px 10px; border-bottom-left-radius: 40px; border-top-right-radius: 40px; border-top-left-radius: 5px; border-bottom-right-radius: 5px; padding-left: 10px; padding-right: 10px;">
            <div id="AddModule_innerbtn" class="container" data-toggle='modal' data-target='#moduleModal' style="color: #006F6F; position: relative; top: 7px; left: -5px; zoom: 745%;">

                <i id="addModuleBtn" class="fa fa-plus-circle"style="cursor:pointer;"></i>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="moduleModal" role="dialog">
    @Html.Partial("PopupModule", "MD")

</div>

<div class="modal fade col-lg-6" id="GanttChartModal" role="dialog">
    @*@Html.Partial("GenerateGanttChart");*@

</div>

<!-- Modal frame to showing Docs -->
<div class="modal fade" id="docsModal" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header" style="background: rgba(0, 111, 111, 0.83); color: floralwhite;">
                <button type="button" style="color: floralwhite" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title"><i class="fa fa-file"></i>&nbsp;&nbsp;Attached Documents</h4>
            </div>
            <div id="docsTable" class="modal-body">
                <div class="table-responsive">
                    <table class="table table-striped table-hover table-bordered">
                        <thead class="thead-default">
                            <tr>
                                <th>Title</th>
                                <th></th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @*Docs List*@
                        </tbody>
                        <tfoot>
                        </tfoot>
                    </table>
                </div>

            </div>
            <div class="modal-footer" style="background: rgba(81, 82, 82, 0.18); padding:7px !important; padding-right: 15px !important">
                <div id="Attach-Footer" data-inputelem="morefileupload" onclick="openFileInput(this)" style="cursor:pointer; -webkit-user-select:none; display:inline-block; float:left; margin:7px;"><i class="glyphicon glyphicon-plus-sign"></i>  Attach More Files</div>
                <input id="morefileupload" data-moduleID="" style="display:none;" onchange="AddMoreModuleFiles(this)" type="file" name="files[]" multiple />
                <button id="docsModalClose" data-tagID="" type="button" class="btn btn-default" data-dismiss="modal" onclick="checkTBody(this)">Close</button>
            </div>
        </div>

    </div>
</div>


<!-- Modal frame to edit module -->
<div class="modal fade" id="moduleEditModal" role="dialog">
    @Html.Partial("PopupEditModule")
</div>


<!-- Modal frame to manage resource order -->
<div class="modal fade" id="resourceOrderModal" role="dialog">
    @Html.Partial("PopupResourceOrder")
</div>



<script type="text/javascript">
    $(document).ready(function () {
        var uname = "@(((Project_Management.CommonFunctions.Userdetails)Session["UserDetails"]).Username)"
        $("#opt_user").css("display", "block");
        $("#opt_user").children('a').text("Welcome- " + uname);

        $("#logout_btn").css("display", "block");

        $("#back_btn").css("display", "block");
        $("#back_btn").html("<a style='font-size:15px' class='nav navbar-brand navbar-nav navbar-right' href='/Home/AddView/@Session["session_pid"]'><span class='glyphicon glyphicon-chevron-left'></span>Back</a>");
    });
</script>

@section Scripts{

    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")
    @Scripts.Render("https://code.highcharts.com/highcharts.js")
    @Scripts.Render("https://code.highcharts.com/modules/exporting.js")
    @Scripts.Render("~/Scripts/select2.min.js")
    @Styles.Render("~/Content/select2.min.css")
    <script type="text/javascript">
        $(".MyCon").fadeIn(500, "swing");

        var ModuleBoxArray = new Array();
        var weekendArray = new Array();

        $(document).ready(function () {
            //debugger
            var length = $("#moduleContainer").children('div').length;
            $('#moduleContainer').children('div').each(function () {
                ModuleBoxArray.push($(this).attr('data-ModuleID'));
            });
            
            $('input[type=datetime]').datepicker({
                dateFormat: "dd/M/yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-60:+0"
            });
            for (var i = 1; i <= length - 1; i++) {
                var utcSeconds = parseInt($("#endDt_" + ModuleBoxArray[i - 1]).attr("data-endDt"));
                var d = new Date(0);
                d.setUTCMilliseconds(utcSeconds); //start_dt
                var total_days = parseInt($("#endDt_" + ModuleBoxArray[i - 1]).attr("data-totalDays")); //dynamic value 
                var rem_days;
                var res;
                var rem;
                var temp; // total num of days to be appended
                var weekday = d.getDay();
                var round_days;

                if (weekday == 1)
                    round_days = 0;
                else if (weekday == 2)
                    round_days = 4;
                else if (weekday == 3)
                    round_days = 3;
                else if (weekday == 4)
                    round_days = 2;
                else if (weekday == 5)
                    round_days = 1;


                if ((total_days - round_days) > 0) {
                    rem_days = total_days - round_days;
                    res = parseInt(rem_days / 5);
                    rem = rem_days % 5;

                    if (res == 0)
                        temp = rem_days;
                    else if (res > 0 && rem == 0)
                        temp = rem_days + (res - 1) * 2;
                    else if (res > 0 && rem > 0)
                        temp = rem_days + res * 2;

                    if (round_days > 0)
                        temp = temp + round_days + 2;
                }
                else
                    temp = total_days;

                if (temp > 0)
                    temp = temp - 1;
                utcSeconds = utcSeconds + temp * 86400000;
                var newd = new Date(0);
                newd.setUTCMilliseconds(utcSeconds);

                $("#endDt_" + ModuleBoxArray[i - 1]).html("<strong>End Date: " + (newd.toUTCString().replace("GMT", "")).replace("00:00:00", "") + "</strong>");
            }
            setTimeout(function () {
                for (var i = 1; i <= length - 1; i++) {
                    $("#pBar_" + ModuleBoxArray[i - 1]).animate({ width: $("#pBar_" + ModuleBoxArray[i - 1]).attr("data-content") + "%" }, 1500, "swing");

                    updateTimer(ModuleBoxArray[i - 1]);
                }
            }, 150);


        });

        function updateTimer(i) {
            var count = 0;
            var counter = setInterval(timer, parseInt(1500 / parseInt($("#pBar_" + i).attr("data-content"))));

            function timer() {
                count = count + 1;
                if (count > $("#pBar_" + i).attr("data-content")) {
                    clearInterval(counter);
                    return;
                }
                document.getElementById("pBarVal_" + i).innerHTML = count + " %";
            }
        }


        //...............Attach Files To Module..................//
        function UploadModuleFiles(e) {
            debugger;
            if (window.FormData !== undefined) {
                debugger
                var mid = $(e).attr("data-ModuleID");
                var fileUpload = $(e).get(0);
                var files = fileUpload.files;
                var fileData = new FormData();
                for (var i = 0; i < files.length; i++) {
                    fileData.append(files[i].name, files[i]);
                }
                $.ajax({
                    url: '/Home/StoreModuleID',
                    type: "POST",
                    async: false,
                    data: "{mid:'" + mid + "'}",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        debugger
                        $.ajax({
                            url: '/Home/UploadModlueFiles',
                            type: "POST",
                            contentType: false, // Not to set any content header  
                            processData: false, // Not to process data  
                            data: fileData,
                            success: function (data) {
                                debugger
                                swal("Files Added", "", "success");
                                $(e).parent().html("<span data-toggle='modal' data-target='#docsModal' data-ModuleID='" + mid + "' onclick='showDocs(this)' class='glyphicon glyphicon-tags files-exist' style='cursor: pointer; zoom: 112%; color:#F8D486;'></span>");
                                $(".files-exist").qtip({
                                    content: {
                                        text: 'Click To View Files'
                                    },
                                    position: {
                                        my: 'bottom left',  // Position my top left...
                                        at: 'top right', // at the bottom right of...
                                        target: 'mouse',
                                        adjust: {
                                            mouse: true  // Can be omitted (e.g. default behaviour)
                                        }

                                    },
                                    show: {
                                        delay: 10
                                    }
                                });
                            }
                        });
                    }
                });

            } else {
                alert("FormData is not supported.");
            }
        }

        //..............Showing List of Uploaded Files...........//
        function showDocs(e) {
            debugger
            var tbl = document.getElementById("docsModal");
            var tblBody = $(tbl).contents().find('tbody');
            $(tblBody).html('');
            var mid = $(e).attr("data-ModuleID");
            $.ajax({
                type: "POST",
                url: "/Home/GetModuleFiles",
                async: false,
                data: "{mid:'" + mid + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: "json"
            })
            .success(function (data) {
                $.each(data, function (index, comment) {
                    var content = "<tr><td>" + comment.ModuleDescription + "</td><td style='text-align:center'><a href='/Home/DownLoadFiles/?filename=" + comment.ModuleDescription + "&filepath=" + comment.ModuleFiles + "'><span class='glyphicon glyphicon-cloud-download' style='cursor:pointer'></span></a></td><td style='text-align:center'><span style='cursor:pointer' class='glyphicon glyphicon-trash' data-mid='" + mid + "' data-filepath='" + comment.ModuleFiles + "' onclick='deleteFile(this)'></span></td></tr>";
                    $(tblBody).append(content);
                });
                $("#morefileupload").attr("data-moduleID", mid);
                $("#docsModalClose").attr("data-tagID", mid);
            });
        }

        function deleteFile(e) {
            var filePath = $(e).attr("data-filepath");
            var moduleID = $(e).attr("data-mid");
            $.ajax({
                type: "POST",
                url: "/Home/DeleteFile",
                async: false,
                data: "{moduleID:'" + moduleID + "',filepath:'" + filePath + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: "json"
            })
            .success(function (data) {
                $(e).parent().parent().fadeOut(150,function () {
                    $(e).parent().parent().remove();
                });                
            });
        }

        function checkTBody(e)
        {
            var tbl = document.getElementById("docsModal");
            var tblBody = $(tbl).contents().find('tbody');
            var len = $(tblBody).children('tr').length;
            if (len < 1)
            {
                $(".Tag-" + $(e).attr("data-tagID")).html("<span data-inputelem='fileupload_" + $(e).attr("data-tagID") + "' class='glyphicon glyphicon-tags files-empty' style='zoom: 112%; color: #ddd; cursor:pointer;' onclick='openFileInput(this)'></span><input id='fileupload_" + $(e).attr("data-tagID") + "' data-ModuleID='" + $(e).attr("data-tagID") + "' style='display:none;' onchange='UploadModuleFiles(this)' type='file' name='files[]' multiple />");
                $(".files-empty").qtip({
                    content: {
                        text: 'Click To Add Files'
                    },
                    position: {
                        my: 'bottom left',  // Position my top left...
                        at: 'top right', // at the bottom right of...
                        target: 'mouse',
                        adjust: {
                            mouse: true  // Can be omitted (e.g. default behaviour)
                        }

                    },
                    show: {
                        delay: 10
                    }
                });
            }
        }

        //....................Add More Module Files..............//
        function AddMoreModuleFiles(e) {
            if (window.FormData !== undefined) {
                var mid = $(e).attr("data-moduleID");
                var fileUpload = $(e).get(0);
                var files = fileUpload.files;
                var fileData = new FormData();
                for (var i = 0; i < files.length; i++) {
                    fileData.append(files[i].name, files[i]);
                }
                if (files.length > 0) {
                    $.ajax({
                        url: '/Home/StoreModuleID',
                        type: "POST",
                        async: false,
                        data: "{mid:'" + mid + "'}",
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (data) {
                            $.ajax({
                                url: '/Home/UploadModlueFiles',
                                type: "POST",
                                contentType: false, // Not to set any content header  
                                processData: false, // Not to process data  
                                data: fileData,
                                success: function (data) {
                                    //swal("Files Added", "", "success");
                                    //..........Append Table Body............//
                                    var tbl = document.getElementById("docsModal");
                                    var tblBody = $(tbl).contents().find('tbody');
                                    $(tblBody).html('');
                                    $.ajax({
                                        type: "POST",
                                        url: "/Home/GetModuleFiles",
                                        async: false,
                                        data: "{mid:'" + mid + "'}",
                                        contentType: "application/json; charset=utf-8",
                                        dataType: "json"
                                    })
                                    .success(function (data) {
                                        $.each(data, function (index, comment) {
                                            var content = "<tr><td>" + comment.ModuleDescription + "</td><td style='text-align:center'><a href='/Home/DownLoadFiles/?filename=" + comment.ModuleDescription + "&filepath=" + comment.ModuleFiles + "'><span class='glyphicon glyphicon-cloud-download' style='cursor:pointer'></span></a></td><td style='text-align:center'><span class='glyphicon glyphicon-trash' data-mid='" + mid + "' data-filepath='" + comment.ModuleFiles + "' onclick='deleteFile(this)'></span></td></tr>";
                                            $(tblBody).append(content);
                                        });
                                    });
                                }
                            });
                        }
                    });
                }
            } else {
                alert("FormData is not supported.");
            }
        }

        //..............Get Tech,Domain Resources................//
        function GetTechResourceList() {
            $.ajax({
                type: "POST",
                url: "/Home/GetTechResource",
                async: false,
                data: "{}",
                contentType: "application/json; charset=utf-8",
                dataType: "json"
            })
            .success(function (data) {
                $.each(data, function (index, comment) {
                    $("#TechResource").append("<option value=" + comment.UserID + ">" + comment.Username + "</option>");
                    $("#editTechResource").append("<option value=" + comment.UserID + ">" + comment.Username + "</option>");
                });

                $.ajax({
                    type: "POST",
                    url: "/Home/GetDomainResource",
                    async: false,
                    data: "{}",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json"
                })
                .success(function (data) {
                    $.each(data, function (index, comment) {
                        $("#DomainResource").append("<option value=" + comment.UserID + ">" + comment.Username + "</option>");
                        $("#editDomainResource").append("<option value=" + comment.UserID + ">" + comment.Username + "</option>");
                    });
                });
            });
        }


        //.......................Fill Edit PopUp Modal..................//
        function fillEditPopupModule(e)
        {
            debugger
            @*data-mTitle="@item.ModuleTitle" data-strtDate="@item.StartDate" data-totalDays="@item.TotalDays" data-techResrc="@item.TechResource" data-analystResrc="@item.AnalystResource" data-techDuration="@item.TechDuration" data-analystDuration="@item.AnalystDuration" data-developerDays="@item.DeveloperDuration" data-baDays="@item.BADuration" data-qcDays="@item.QCDuration" data-leadDays="@item.LeadDuration" data-domainDays="@item.DomainDuration" data-mDesc="@item.ModuleDescription" data-mCost="@item.ModuleCost"*@
            $("#modalTitle").html("<i class='fa fa-cube'></i> Edit Module- " + $(e).attr("data-mTitle"));
            $("#editModuleName").val($(e).attr("data-mTitle"));
            var d = new Date(0);
            d.setUTCMilliseconds($(e).attr("data-strtDate"));
            var month, dtStr;
            if (d.getMonth() == 1)
                month = "Jan";
            if (d.getMonth() == 2)
                month = "Feb";
            if (d.getMonth() == 3)
                month = "Mar";
            if (d.getMonth() == 4)
                month = "Apr";
            if (d.getMonth() == 5)
                month = "May";
            if (d.getMonth() == 6)
                month = "Jun";
            if (d.getMonth() == 7)
                month = "Jul";
            if (d.getMonth() == 8)
                month = "Aug";
            if (d.getMonth() == 9)
                month = "Sep";
            if (d.getMonth() == 10)
                month = "Oct";
            if (d.getMonth() == 11)
                month = "Nov";
            if (d.getMonth() == 12)
                month = "Dec";

            if (d.getDate() < 10)
                dtStr = "0" + d.getDate();
            else
                dtStr = d.getDate();

            $("#editModuleStartDate").val(dtStr+"/"+month+"/"+d.getFullYear());
            var TechStr = $(e).attr("data-techResrc");
            var techarray = TechStr.split(",");
            var AnalystStr = $(e).attr("data-analystResrc");
            var analystarray = AnalystStr.split(",");
            $("#editTechResource").val(techarray);
            $("#editTechResource").select2({
                placeholder: "Select Tech Resource",
                allowClear: true
            });
            $("#editDomainResource").val(analystarray);
            $("#editDomainResource").select2({
                placeholder: "Select Analyst Resource",
                allowClear: true
            });
            $("#editTechDuration").val($(e).attr("data-techDuration"));
            $("#editTechDuration").change();
            $("#editBADuration").val($(e).attr("data-analystDuration"));
            $("#editBADuration").change();
            $("#editmoduleDesc").val($(e).attr("data-mDesc"));
        }


        //...............Rearrange Module Resource Order................//
        function drawResourceGanttChart(e)
        {
            var intervalArray = new Array();
            if(weekendArray.length>0)
                weekendArray.splice(0, weekendArray.length);

            var jsonDataArray = new Array();
            var startDate = parseInt( $(e).attr("data-strtDate"));
            var totalDays = parseInt($(e).attr("data-totalDays")); 
            var techDays = parseInt($(e).attr("data-techDuration") * 5);
            var analystDays = parseInt($(e).attr("data-analystDuration") * 5);

            intervalArray.push($(e).attr("data-developerDays") * techDays);
            intervalArray.push($(e).attr("data-baDays") * analystDays);
            intervalArray.push($(e).attr("data-qcDays") * techDays);
            intervalArray.push($(e).attr("data-leadDays") * techDays);
            intervalArray.push($(e).attr("data-domainDays") * analystDays);
            debugger

            var mName = $(e).attr("data-mTitle");
            var interval = parseInt(totalDays / 5);
            var Linterval = interval + parseInt(totalDays % 5);

            for (var i = 4; i >= 0; i--)
            {
                var jsonData = {
                    x: '',
                    x2: '',
                    y: ''
                };
                jsonData.x = parseInt(startDate);

                if (i != 0) {
                    jsonData.x2 = parseInt(getPartialEndDate(startDate, interval));
                    var d = new Date(0);
                    d.setUTCMilliseconds(jsonData.x2);
                    if (d.getDay() == 5) { //If End date's day is friday
                        startDate = parseInt(parseInt(jsonData.x2) + 3 * 86400000);
                        var plotBandData = {
                            color: '',
                            from: '',
                            to: ''
                        };
                        plotBandData.color = 'rgba(232, 37, 75, 0.12)';
                        plotBandData.from = parseInt(jsonData.x2) + 1 * 86400000;
                        plotBandData.to = parseInt(jsonData.x2) + 2 * 86400000;
                        weekendArray.push(plotBandData);
                    }
                    else
                        startDate = parseInt(parseInt(jsonData.x2) + 86400000);
                }
                else
                    jsonData.x2 = parseInt(getPartialEndDate(startDate, Linterval));

                jsonData.y = i;
                jsonDataArray.push(jsonData);
            }

            
                (function (H) {
                    var defaultPlotOptions = H.getOptions().plotOptions,
                        columnType = H.seriesTypes.column,
                        each = H.each,
                        extendClass = H.extendClass,
                        pick = H.pick,
                        Point = H.Point;

                    defaultPlotOptions.xrange = H.merge(defaultPlotOptions.column, {
                        tooltip: {
                            pointFormat: '<span style="color:{point.color}">\u25CF</span> {series.name}: <b>{point.yCategory}</b><br/>'
                        }
                    });
                    H.seriesTypes.xrange = H.extendClass(columnType, {
                        pointClass: extendClass(Point, {
                            // Add x2 and yCategory to the available properties for tooltip formats
                            getLabelConfig: function () {
                                var cfg = Point.prototype.getLabelConfig.call(this);

                                cfg.x2 = this.x2;
                                cfg.yCategory = this.yCategory = this.series.yAxis.categories && this.series.yAxis.categories[this.y];
                                return cfg;
                            }
                        }),
                        type: 'xrange',
                        forceDL: true,
                        parallelArrays: ['x', 'x2', 'y'],
                        requireSorting: false,
                        animate: H.seriesTypes.line.prototype.animate,

                        /**
                         * Borrow the column series metrics, but with swapped axes. This gives free access
                         * to features like groupPadding, grouping, pointWidth etc.
                         */
                        getColumnMetrics: function () {
                            var metrics,
                                chart = this.chart;

                            function swapAxes() {
                                each(chart.series, function (s) {
                                    var xAxis = s.xAxis;
                                    s.xAxis = s.yAxis;
                                    s.yAxis = xAxis;
                                });
                            }

                            swapAxes();

                            this.yAxis.closestPointRange = 1;
                            metrics = columnType.prototype.getColumnMetrics.call(this);

                            swapAxes();

                            return metrics;
                        },
                        translate: function () {
                            columnType.prototype.translate.apply(this, arguments);
                            var series = this,
                                xAxis = series.xAxis,
                                metrics = series.columnMetrics;

                            H.each(series.points, function (point) {
                                var barWidth = Math.min(
                                    xAxis.translate(H.pick(point.x2, point.x + (point.len || 0))) - point.plotX,
                                    xAxis.len
                                );
                                point.shapeArgs = {
                                    x: Math.max(0, point.plotX),
                                    y: point.plotY + metrics.offset,
                                    width: barWidth,
                                    height: metrics.width
                                };
                                point.tooltipPos[0] += barWidth / 2;
                                point.tooltipPos[1] -= metrics.width / 2;
                            });
                        }
                    });

                    /**
                     * Max x2 should be considered in xAxis extremes
                     */
                    H.wrap(H.Axis.prototype, 'getSeriesExtremes', function (proceed) {
                        var axis = this,
                            dataMax,
                            modMax;

                        proceed.call(this);
                        if (this.isXAxis) {
                            dataMax = pick(axis.dataMax, Number.MIN_VALUE);
                            each(this.series, function (series) {
                                each(series.x2Data || [], function (val) {
                                    if (val > dataMax) {
                                        dataMax = val;
                                        modMax = true;
                                    }
                                });
                            });
                            if (modMax) {
                                axis.dataMax = dataMax;
                            }
                        }
                    });
                }(Highcharts));


            // THE CHART
        
                $('#chartContainer').highcharts({
                    chart: {
                        plotBackgroundImage: 'url("http://www.transparenttextures.com/patterns/45-degree-fabric-dark.png")',
                        type: 'xrange'
                    },
                    title: {
                        text: 'Module TimeLine (Resource-Wise), ( <i class="glyphicon glyphicon-stop" style="color:rgba(0, 111, 111, 0.23); font-size:80%"></i> weekend days )',
                        useHTML: true
                    },
                    credits: {
                        enabled: false
                    },
                    exporting: {
                        enabled: false
                    },
                    xAxis: {
                        plotBands: weekendArray,
                        type: 'datetime'
                    },
                    yAxis: {
                        title: '',
                        categories: ['QA', 'Tech', 'Lead', 'Domain', 'Analyst'],
                        min: 0,
                        max: 4
                    },
                    tooltip: {
                        formatter: function () {
                            return '<b>From: </b>' + Highcharts.dateFormat('%d-%b-%Y', this.point.options.x) + '<b>, To: </b>' + Highcharts.dateFormat('%d-%b-%Y', this.point.options.x2) + '<br/><br/><span style="color:' + this.point.color + '">\u25CF </span>' + this.series.name + ':  <b>' + this.point.yCategory + '</b>';
                        }
                    },
                    plotOptions: {
                        series: {
                            animation: {
                                duration: 1500
                            }
                        }
                    },
                    series: [{
                        name: mName,
                    // pointPadding: 0,
                    // groupPadding: 0,
                    borderRadius: 5,
                    pointWidth: 10,
                    data: jsonDataArray
                }]

            });
            
            setTimeout(function () {
                $('#chartContainer').highcharts().reflow();
            }, 180);

        }


        function getPartialEndDate(utcSeconds, total_days)
        {
            var d = new Date(0);
            d.setUTCMilliseconds(utcSeconds); //start_dt
            //var start_dt;
            var rem_days;
            var res;
            var rem;
            var temp; // total num of days to be appended
            var weekday = d.getDay();
            var round_days;

            if (weekday == 1)
                round_days = 0;
            else if (weekday == 2)
                round_days = 4;
            else if (weekday == 3)
                round_days = 3;
            else if (weekday == 4)
                round_days = 2;
            else if (weekday == 5)
                round_days = 1;


            if ((total_days - round_days) > 0) {
                rem_days = total_days - round_days;
                res = parseInt(rem_days / 5);
                rem = rem_days % 5;

                if (res == 0)
                    temp = rem_days;
                else if (res > 0 && rem == 0)
                    temp = rem_days + (res - 1) * 2;
                else if (res > 0 && rem > 0)
                    temp = rem_days + res * 2;

                if (round_days > 0)
                    temp = temp + round_days + 2;
            }
            else
                temp = total_days;

            if (temp > 0) {
                total_days = temp;
                temp = temp - 1; //total days to be appended
            }
            var tempUtcSeconds = utcSeconds; //current start date
            utcSeconds = utcSeconds + temp * 86400000; //updated end date (temp contains exact total days including Sat/Sun)
            
            var newd = new Date(0);
            newd.setUTCMilliseconds(utcSeconds);

            if (weekday == 1) {
                total_days = total_days;
            }
            else if (weekday == 2) {
                total_days = total_days + 1;
                tempUtcSeconds = tempUtcSeconds - 86400000;
            }
            else if (weekday == 3) {
                total_days = total_days + 2;
                tempUtcSeconds = tempUtcSeconds - 2 * 86400000;
            }
            else if (weekday == 4) {
                total_days = total_days + 3;
                tempUtcSeconds = tempUtcSeconds - 3 * 86400000;
            }
            else if (weekday == 5) {
                total_days = total_days + 4;
                tempUtcSeconds = tempUtcSeconds - 4 * 86400000;
            }
            var loopCount = parseInt(total_days / 7);
            for (var i = 1; i <= loopCount; i++) {
                var fromDate = tempUtcSeconds + (7 * i - 2) * 86400000;
                var toDate = tempUtcSeconds + (7 * i - 1) * 86400000;
                var plotBandData = {
                    color: '',
                    from: '',
                    to: ''
                };
                plotBandData.color = 'rgba(0, 111, 111, 0.10)';
                plotBandData.from = fromDate;
                plotBandData.to = toDate;
                weekendArray.push(plotBandData);
            }

            debugger
            return utcSeconds;
        }



    </script>


    <style>
        hr {
            margin-top: 0px;
        }

        .InnerMyCon {
            background-color: floralwhite;
            transition: border-width border-color border-style 2s;
        }

        /*.InnerMyCon:hover
            {
                border-width: 1px;
                border-color: cadetblue;
                border-style: solid;
            }*/

        #AddModule_btn {
            transition: border-width border-color border-style 2s;
        }

            #AddModule_btn:hover {
                border-width: 1px;
                border-color: cadetblue;
                border-style: solid;
            }

        .confirm {
            background-color: rgba(0, 111, 111, 0.86) !important;
        }

        .confirm:hover {
            background-color: #006F6F !important;
        }

        .btn-primary {
            background-color: rgba(0, 111, 111, 0.86) !important;
        }

        .btn-primary:hover {
            background-color: #006F6F !important;
        }

        #resourceOrderModal {
            -webkit-transition: opacity .22s linear !important;
            -o-transition: opacity .22s linear !important;
            transition: opacity .22s linear !important;
        }

    </style>
}
